#include <stdio.h>

// 전처리기 구문 : 모든 컴파일 구문에서 먼저 수행?


#include <stdio.h>
// printf와 scanf를 쓰기위한 표준 입출력함수 헤더를 참조


int Add(int a, int b)
{
	a;
	return a + b;
}


// 함수
int main()
{
	// 프로그램 실행되면 제일 먼저 실행되는 함수는 main
	// 프로그램 종료는 = main 함수 종료
	// main안에 a함수에서 b함수를 호출하고 b함수에서 c함수를 호출한다고 가정
	// c가 종료되고 돌아와야 b가 종료되고 b가 돌아와야 a가 종료된다.
	// 먼저들어온 함수가 나중에 나감?
	// 자료구조에서 스택과 비슷?
	// 후입선출구조
	// 함수가 사용하는 메모리 영역을 스택메모리 영역이라고 한다.
	// 메인 함수가 시작되는 순간 메인함수에 필요한 메모리를 잡는다.

	// 먼저들어온 것이 먼저나가는 것 - 선입선출 - 큐 Queue라고 함
	
	// main함수 시작되면 스택 메모리에서 필요한 공간을 잡는다. 
	// add라는 함수를 호출하면 스택메모리에서 필요한 메모리를 차지한다. main으로 부터 a,b 값을 전달 받고 둘을 연산하고 return한다. 
	// 그렇게 돌려 받은 값을 main에서는 자기의 지역변수에 넣는다. 
	// 그 이후에 add가 사용하던 메모리는 해제가 된다.

	int a = 100;
	a;
	int iData = Add(100, 200);
	// Add함수가 호출되고 a,b에 값을 넣고 종료되고 메모리가 날라감

	int iData = Add(200, 200);
	int iData = Add(300, 200);
	int iData = Add(400, 200);
	// 쓸만큼의 메모리가 잡혔다가 되돌아가고 반복한다.

	// 메모리와 코드는 동일시하면 안된다.
	// 함수는 명령어 집합체
	// Add라는 함수는 호출되었을때의 명령어이다.







	return 0;

}
